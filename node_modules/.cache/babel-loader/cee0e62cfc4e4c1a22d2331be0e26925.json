{"ast":null,"code":"var _jsxFileName = \"/home/james/Documentos/3_Academico/UTCV/9C/Aplicaci\\xF3n de las telecomunicaciones/SHD_1P/enlaces/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\"\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"The water would boil.\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, \"The water would not boil.\");\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Enter temperature in \", scaleNames[scale], \":\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: temperature,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass ValueInputA extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Ingrese el valor de A:\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass ValueInputB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Ingrese el valor de B:\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction ResultadoSuma(props) {\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Hola mundo \", props.result);\n}\n\nfunction trySum(valA, valB) {\n  return (valA + valB).toString();\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this); // Variables\n\n    this.state = {\n      temperature: \"\",\n      scale: \"c\",\n      variable: \"\",\n      newValue: \"\",\n      result: 0,\n      a: '10',\n      b: 0\n    }; //Handlers\n\n    this.handleValueChangeA = this.handleValueChangeA.bind(this);\n    this.handleValueChangeB = this.handleValueChangeB.bind(this);\n  } //Handlers\n\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: \"c\",\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: \"f\",\n      temperature\n    });\n  }\n\n  handleValueChangeA(newValue) {\n    this.setState({\n      a: newValue\n    });\n  }\n\n  handleValueChangeB(newValue) {\n    this.setState({\n      b: newValue\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature; // COnstantes\n\n    const a = this.state.a;\n    const b = this.state.b; // Operaciones\n\n    const result = a + ' , ' + b;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: this.handleCelsiusChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: this.handleFahrenheitChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BoilingVerdict, {\n      celsius: parseFloat(celsius),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ValueInputA, {\n      value: a,\n      onValueChange: this.handleValueChangeA,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ValueInputB, {\n      value: b,\n      onValueChange: this.handleValueChangeB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ResultadoSuma, {\n      result: result,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/james/Documentos/3_Academico/UTCV/9C/Aplicaci√≥n de las telecomunicaciones/SHD_1P/enlaces/src/index.js"],"names":["React","ReactDOM","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","BoilingVerdict","props","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","ValueInputA","onValueChange","ValueInputB","ResultadoSuma","result","trySum","valA","valB","Calculator","handleCelsiusChange","handleFahrenheitChange","state","variable","newValue","a","b","handleValueChangeA","handleValueChangeB","setState","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,SADc;AAEjBC,EAAAA,CAAC,EAAE;AAFc,CAAnB;;AAKA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAQ,CAACA,UAAU,GAAG,EAAd,IAAoB,CAArB,GAA0B,CAAjC;AACD;;AAED,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAQA,OAAO,GAAG,CAAX,GAAgB,CAAhB,GAAoB,EAA3B;AACD;;AAED,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,OAAjC,EAA0C;AACxC,QAAMC,KAAK,GAAGC,UAAU,CAACH,WAAD,CAAxB;;AACA,MAAII,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;AACvB,WAAO,EAAP;AACD;;AACD,QAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;AACA,SAAOC,OAAO,CAACG,QAAR,EAAP;AACD;;AAED,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACd,OAAN,IAAiB,GAArB,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AAED,MAAMe,gBAAN,SAA+BvB,KAAK,CAACwB,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,SAAKN,KAAL,CAAWO,mBAAX,CAA+BD,CAAC,CAACE,MAAF,CAASC,KAAxC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMtB,WAAW,GAAG,KAAKY,KAAL,CAAWZ,WAA/B;AACA,UAAMuB,KAAK,GAAG,KAAKX,KAAL,CAAWW,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA8B/B,UAAU,CAAC+B,KAAD,CAAxC,MADF,eAEE;AAAO,MAAA,KAAK,EAAEvB,WAAd;AAA2B,MAAA,QAAQ,EAAE,KAAKgB,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnB4C;;AAsB/C,MAAMQ,WAAN,SAA0BlC,KAAK,CAACwB,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,SAAKN,KAAL,CAAWa,aAAX,CAAyBP,CAAC,CAACE,MAAF,CAASC,KAAlC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAO,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWS,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKL,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjBuC;;AAoB1C,MAAMU,WAAN,SAA0BpC,KAAK,CAACwB,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACd,SAAKN,KAAL,CAAWa,aAAX,CAAyBP,CAAC,CAACE,MAAF,CAASC,KAAlC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAO,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWS,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKL,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAjBuC;;AAoB1C,SAASW,aAAT,CAAuBf,KAAvB,EAA8B;AAC5B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeA,KAAK,CAACgB,MAArB,CADF;AAGD;;AAED,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AAC1B,SAAO,CAACD,IAAI,GAAGC,IAAR,EAAcrB,QAAd,EAAP;AACD;;AAKD,MAAMsB,UAAN,SAAyB1C,KAAK,CAACwB,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACH,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKqB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBhB,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKiB,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BjB,IAA5B,CAAiC,IAAjC,CAA9B,CAHiB,CAIjB;;AACA,SAAKkB,KAAL,GAAa;AAAEnC,MAAAA,WAAW,EAAE,EAAf;AAAmBuB,MAAAA,KAAK,EAAE,GAA1B;AAA+Ba,MAAAA,QAAQ,EAAE,EAAzC;AAA6CC,MAAAA,QAAQ,EAAE,EAAvD;AAA2DT,MAAAA,MAAM,EAAG,CAApE;AAAuEU,MAAAA,CAAC,EAAG,IAA3E;AAAiFC,MAAAA,CAAC,EAAG;AAArF,KAAb,CALiB,CAMjB;;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBvB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKwB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBxB,IAAxB,CAA6B,IAA7B,CAA1B;AACD,GAVsC,CAYvC;;;AACAgB,EAAAA,mBAAmB,CAACjC,WAAD,EAAc;AAC/B,SAAK0C,QAAL,CAAc;AAAEnB,MAAAA,KAAK,EAAE,GAAT;AAAcvB,MAAAA;AAAd,KAAd;AACD;;AAEDkC,EAAAA,sBAAsB,CAAClC,WAAD,EAAc;AAClC,SAAK0C,QAAL,CAAc;AAAEnB,MAAAA,KAAK,EAAE,GAAT;AAAcvB,MAAAA;AAAd,KAAd;AACD;;AAEDwC,EAAAA,kBAAkB,CAACH,QAAD,EAAW;AAC3B,SAAKK,QAAL,CAAc;AAACJ,MAAAA,CAAC,EAAED;AAAJ,KAAd;AACD;;AAEDI,EAAAA,kBAAkB,CAACJ,QAAD,EAAW;AAC3B,SAAKK,QAAL,CAAc;AAAEH,MAAAA,CAAC,EAAEF;AAAL,KAAd;AACD;;AAEDf,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKY,KAAL,CAAWZ,KAAzB;AACA,UAAMvB,WAAW,GAAG,KAAKmC,KAAL,CAAWnC,WAA/B;AACA,UAAMF,OAAO,GAAGyB,KAAK,KAAK,GAAV,GAAgBxB,UAAU,CAACC,WAAD,EAAcL,SAAd,CAA1B,GAAqDK,WAArE;AACA,UAAMJ,UAAU,GAAG2B,KAAK,KAAK,GAAV,GAAgBxB,UAAU,CAACC,WAAD,EAAcH,YAAd,CAA1B,GAAwDG,WAA3E,CAJO,CAMP;;AACA,UAAMsC,CAAC,GAAG,KAAKH,KAAL,CAAWG,CAArB;AACA,UAAMC,CAAC,GAAG,KAAKJ,KAAL,CAAWI,CAArB,CARO,CAUP;;AACA,UAAMX,MAAM,GAAGU,CAAC,GAAG,KAAJ,GAAYC,CAA3B;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAC,GADR;AAEE,MAAA,WAAW,EAAEzC,OAFf;AAGE,MAAA,mBAAmB,EAAE,KAAKmC,mBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAC,GADR;AAEE,MAAA,WAAW,EAAErC,UAFf;AAGE,MAAA,mBAAmB,EAAE,KAAKsC,sBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE/B,UAAU,CAACL,OAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAcE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAIwC,CADX;AAEE,MAAA,aAAa,EAAE,KAAKE,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eAkBE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAID,CADX;AAEE,MAAA,aAAa,EAAE,KAAKE,kBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAuBE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAEb,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AAvEsC;;AA0EzCrC,QAAQ,CAAC+B,MAAT,eAAgB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAgCqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhC","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\",\n};\n\nfunction toCelsius(fahrenheit) {\n  return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature} onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nclass ValueInputA extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {    \n    return (\n      <fieldset>\n        <legend>Ingrese el valor de A:</legend>\n        <input value={this.props.value} onChange={this.handleChange}/>\n      </fieldset>\n    );\n  }\n}\n\nclass ValueInputB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onValueChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <fieldset>\n        <legend>Ingrese el valor de B:</legend>\n        <input value={this.props.value} onChange={this.handleChange}/>\n      </fieldset>\n    );\n  }\n}\n\nfunction ResultadoSuma(props) {\n  return (\n    <p>Hola mundo {props.result}</p>\n  );\n}\n\nfunction trySum(valA, valB) {\n  return (valA + valB).toString();\n}\n\n\n\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    // Variables\n    this.state = { temperature: \"\", scale: \"c\", variable: \"\", newValue: \"\", result : 0, a : '10', b : 0};\n    //Handlers\n    this.handleValueChangeA = this.handleValueChangeA.bind(this);\n    this.handleValueChangeB = this.handleValueChangeB.bind(this);\n  }\n\n  //Handlers\n  handleCelsiusChange(temperature) {\n    this.setState({ scale: \"c\", temperature });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({ scale: \"f\", temperature });\n  }\n\n  handleValueChangeA(newValue) {\n    this.setState({a: newValue });\n  }\n\n  handleValueChangeB(newValue) {\n    this.setState({ b: newValue});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    // COnstantes\n    const a = this.state.a;\n    const b = this.state.b;\n\n    // Operaciones\n    const result = a + ' , ' + b;\n    \n    \n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange}\n        />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange}\n        />\n\n        <BoilingVerdict celsius={parseFloat(celsius)} />\n\n        <ValueInputA \n          value = {a}\n          onValueChange={this.handleValueChangeA}\n        />\n        <ValueInputB \n          value = {b}\n          onValueChange={this.handleValueChangeB}\n        />\n\n        <ResultadoSuma result={result}/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}