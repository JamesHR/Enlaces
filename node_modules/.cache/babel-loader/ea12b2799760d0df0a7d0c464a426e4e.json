{"ast":null,"code":"var _jsxFileName = \"/home/james/Documentos/3_Academico/UTCV/9C/Aplicaci\\xF3n de las telecomunicaciones/SHD_1P/enlaces/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }\n    }, \"The water would boil.\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, \"The water would not boil.\");\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"Enter temperature in \", scaleNames[scale], \":\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: temperature,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nclass ValueInputA extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Enter value of A:\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), \"//onChange=\", this.handleChange, \" />\");\n  }\n\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c',\n      value: ''\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    const a = 0;\n    const b = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"c\",\n      temperature: celsius,\n      onTemperatureChange: this.handleCelsiusChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TemperatureInput, {\n      scale: \"f\",\n      temperature: fahrenheit,\n      onTemperatureChange: this.handleFahrenheitChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BoilingVerdict, {\n      celsius: parseFloat(celsius),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Resultado\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Calculator, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/james/Documentos/3_Academico/UTCV/9C/Aplicaci√≥n de las telecomunicaciones/SHD_1P/enlaces/src/index.js"],"names":["React","ReactDOM","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","BoilingVerdict","props","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","ValueInputA","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","a","b","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst scaleNames = {\n    c: 'Celsius',\n    f: 'Fahrenheit'\n  };\n  \n  function toCelsius(fahrenheit) {\n    return (fahrenheit - 32) * 5 / 9;\n  }\n  \n  function toFahrenheit(celsius) {\n    return (celsius * 9 / 5) + 32;\n  }\n  \n  function tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n  \n  function BoilingVerdict(props) {\n    if (props.celsius >= 100) {\n      return <p>The water would boil.</p>;\n    }\n    return <p>The water would not boil.</p>;\n  }\n  \n  class TemperatureInput extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n    }\n  \n    handleChange(e) {\n      this.props.onTemperatureChange(e.target.value);\n    }\n  \n    render() {\n      const temperature = this.props.temperature;\n      const scale = this.props.scale;\n      return (\n        <fieldset>\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\n          <input value={temperature}\n                 onChange={this.handleChange} />\n        </fieldset>\n      );\n    }\n  }\n\n  class ValueInputA extends React.Component {\n    render () {\n        return (\n          <fieldset>\n          <legend>Enter value of A:</legend>\n          <input value='10'/>\n                 //onChange={this.handleChange} />\n        </fieldset>\n        );\n    }\n}\n  \n\n  \n  class Calculator extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n      this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n      this.state = {temperature: '', scale: 'c', value: ''};\n    }\n  \n    handleCelsiusChange(temperature) {\n      this.setState({scale: 'c', temperature});\n    }\n  \n    handleFahrenheitChange(temperature) {\n      this.setState({scale: 'f', temperature});\n    }\n  \n    render() {\n      const scale = this.state.scale;\n      const temperature = this.state.temperature;\n      const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n      const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n      const a = 0;\n      const b = 0;\n  \n      return (\n        <div>\n          <TemperatureInput\n            scale=\"c\"\n            temperature={celsius}\n            onTemperatureChange={this.handleCelsiusChange} />\n          <TemperatureInput\n            scale=\"f\"\n            temperature={fahrenheit}\n            onTemperatureChange={this.handleFahrenheitChange} />\n          <BoilingVerdict\n            celsius={parseFloat(celsius)} />\n\n            \n            <input></input>\n            <p>Resultado</p>\n        </div>\n      );\n    }\n  }\n  \n  ReactDOM.render(\n    <Calculator />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}